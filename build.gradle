//build.gradle 파일
plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.6'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

allprojects {
    group = 'org.fastcampus'
    version = '0.0.1-SNAPSHOT'
    sourceCompatibility = '17'

    repositories {
        mavenCentral()
    }

}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

subprojects { // 각 모듈에 적용할 공통 설정
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.asciidoctor.jvm.convert'

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        //spring boot starter

        implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-jdbc'
        //security 임시 제거
//    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
//    implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'

        //flyway
//    implementation 'org.flywaydb:flyway-core'
        developmentOnly 'org.springframework.boot:spring-boot-devtools'

        testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//        testImplementation 'org.springframework.security:spring-security-test'

        runtimeOnly 'com.h2database:h2'
        runtimeOnly 'com.mysql:mysql-connector-j'
    }

    tasks.named('bootJar') { //빌드할 때 bootjar 파일로 하겠다는 의미
        enabled = false
    }

    tasks.named('jar') { //빌드할 때 jar 파일로 하겠다는 의미
        enabled = false
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}

project(':orury-api') {
    dependencies {

    }
}
project(':orury-batch') {
    dependencies {

    }
}
project(':orury-admin') {
    dependencies {
        implementation project(':orury-api')
    }
}