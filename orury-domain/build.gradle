//build.gradle 파일
plugins {
    id 'java-test-fixtures'
}

dependencies {
    implementation project(':orury-common')

    //S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.268'

    //flyway
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'

    //validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    //OAuth2, Security
    compileOnly 'org.springframework.boot:spring-boot-starter-security'
    testImplementation 'org.springframework.security:spring-security-test'

    //h2
    testRuntimeOnly('com.h2database:h2')

    testRuntimeOnly('com.mysql:mysql-connector-j')

    //test fixtures
    testFixturesAnnotationProcessor 'org.projectlombok:lombok'
    testFixturesImplementation 'org.projectlombok:lombok'
    testFixturesImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testFixturesImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    //thumbnailator
    implementation group: 'net.coobird', name: 'thumbnailator', version: '0.4.20'


}
tasks.register("prepareKotlinBuildScriptModel") {}

tasks.named('bootJar') {
    enabled = false
}

tasks.named('jar') {
    enabled = true
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco {
    toolVersion = "0.8.7"
}

jacocoTestReport {
    reports {
        html.destination file("${buildDir}/jacoco/html")
    }
    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: ['**/domain/**/domain/**/', '**/global/**', '**/base/**', '**/OruryDomainApplication.class'])
        }))
    }
}

test {
    finalizedBy 'jacocoTestReport'
}